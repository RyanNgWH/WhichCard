// Import necessary dependency from Redux Toolkit.
import { createSlice, PayloadAction } from '@reduxjs/toolkit';

// Define the state interface for individual user cards.
interface UserCardState {
  cardName: string;         // Holds the name of the user's card.
  cardExpiry: string;       // Holds the expiry date of the user's card.
  card: string;             // Holds the type of the user's card.
}

// Define the state interface for user database cards.
interface UserDbCardState {
  cardName: string,                               // Holds the name of the user's card.
  cardExpiry: string,                             // Holds the expiry date of the user's card.
  card: {
    _id: string,                                  // Holds the unique identifier of the card.
    issuer: string,                               // Holds the issuer name of the card.
    type: string,                                 // Holds the type of the card.
    benefits: Array<{ category: string, mccs: number[], cashbackRate: number }>   // Holds an array of benefits associated with the card.
  }
}

// Define the state interface for the user.
interface UserState {
  _id: string;                  // Holds the unique identifier of the user.
  name: string;                 // Holds the name of the user.
  email: string;                // Holds the email of the user.
  password: string;             // Holds the password of the user.
  createdAt: number;            // Holds the timestamp of user creation.
  updatedAt: number;            // Holds the timestamp of user update.
  activeCardIndex: number;      // Holds the index of the active card.
  cards: UserCardState[];       // Holds an array of user's cards.
  dbCards: UserDbCardState[];   // Holds an array of user's database cards.
}

// Define the initial state for the user.
const initialState: UserState = {
  _id: '',
  name: '',
  email: '',
  password: '',
  createdAt: 0,
  updatedAt: 0,
  activeCardIndex: 0,
  cards: [],
  dbCards: []
};

// Create a Redux slice for the user.
export const userSlice = createSlice({
  name: 'signUp',              // Specify the slice name.
  initialState,                // Provide the initial state.
  reducers: {
    setUserState: (state: UserState, action: PayloadAction<UserState>) => {
      return {
        ...state,
        ...action.payload
      };
    },
    setActiveCardIndex(state: UserState, action: PayloadAction<number>) {
      return {
        ...state,
        activeCardIndex: action.payload
      };
    },
    setUserCards: (state: UserState, action: PayloadAction<UserCardState[]>) => {
      return {
        ...state,
        cards: action.payload
      };
    },
    setUserDbCards: (state: UserState, action: PayloadAction<UserDbCardState[]>) => {
      return {
        ...state,
        dbCards: action.payload
      };
    },
    setUserInitialState: () => initialState
  },
});

// Export the action creators generated by the slice.
export const {
  setUserState,
  setActiveCardIndex,
  setUserCards,
  setUserDbCards,
  setUserInitialState
} = userSlice.actions;

// Export the reducer function from the slice to be used in the Redux store.
export default userSlice.reducer;
