// Import necessary dependencies from Redux Toolkit.
import { createSlice, PayloadAction } from '@reduxjs/toolkit';

// Define the interface for recommended card data.
export interface RecommendedCard {
  name: string;
  issuer: string;
  type: string;
  cashbackAmount: number;
  cashbackRate: number;
}

// Define the interface for transaction data.
export interface Transaction {
  _id: string;
  user: {
    _id: string;
  };
  userCard: string;
  merchant: {
    name: string;
    prettyName: string;
  };
  dateTime: string;
  amount: number;
  cashbackAmount: number;
}

// Define the interface for the state of the transaction feature.
interface TransactionState {
  hasFetchedAllTransactions: boolean;    // Holds whether all transactions have been fetched.
  allTransactions: Transaction[];        // Stores an array of all transactions.
  modalVisible: boolean;                 // Manages the visibility of a modal.
  amount: string;                        // Holds the amount for a transaction.
  recommendedCards: RecommendedCard[];   // Stores an array of recommended cards.
  cardSelectionOpen: boolean;            // Manages the visibility of card selection.
  selectedCardIndex: number;             // Index of the selected card.
  errStr: string;                        // Holds an error string.
}

// Define the initial state for the transaction feature.
const initialState: TransactionState = {
  hasFetchedAllTransactions: false,          // Initialize hasFetchedAllTransactions as false.
  allTransactions: [],                       // Initialize the array of all transactions as empty.
  modalVisible: false,                       // Initialize modal visibility as false.
  amount: '',                                // Initialize amount as empty.
  recommendedCards: [],                      // Initialize recommended cards as empty.
  cardSelectionOpen: false,                  // Initialize card selection visibility as false.
  selectedCardIndex: 0,                      // Initialize selected card index as 0.
  errStr: '',                                // Initialize error string as empty.
};

// Create a Redux slice for the transaction feature.
export const transactionSlice = createSlice({
  name: 'transaction',                       // Specify the slice name.
  initialState,                              // Provide the initial state.
  reducers: {
    setHasFetchedAllTransactions: (
      state: TransactionState,
      action: PayloadAction<boolean>,
    ) => {
      return {
        ...state,
        hasFetchedAllTransactions: action.payload,
      };
    },
    setAllTransactions: (
      state: TransactionState,
      action: PayloadAction<Transaction[]>,
    ) => {
      return {
        ...state,
        allTransactions: action.payload,
      };
    },
    setModalVisible: (
      state: TransactionState,
      action: PayloadAction<boolean>,
    ) => {
      return {
        ...state,
        modalVisible: action.payload,
      };
    },
    setAmount: (state: TransactionState, action: PayloadAction<string>) => {
      return {
        ...state,
        amount: action.payload,
      };
    },
    setRecommendedCards: (
      state: TransactionState,
      action: PayloadAction<RecommendedCard[]>,
    ) => {
      return {
        ...state,
        recommendedCards: action.payload,
      };
    },
    setCardSelectionOpen: (
      state: TransactionState,
      action: PayloadAction<boolean>,
    ) => {
      return {
        ...state,
        cardSelectionOpen: action.payload,
      };
    },
    setSelectedCardIndex: (
      state: TransactionState,
      action: PayloadAction<number>,
    ) => {
      return {
        ...state,
        selectedCardIndex: action.payload,
      };
    },
    setErrStr: (state: TransactionState, action: PayloadAction<string>) => {
      return {
        ...state,
        errStr: action.payload,
      };
    },
    setCleanState: (state: TransactionState) => {
      return {
        ...state,
        modalVisible: false,
        amount: '',
        recommendedCards: [],
        cardSelectionOpen: false,
        selectedCardIndex: 0,
        errStr: '',
      };
    },
    setInitialState: () => initialState,
  },
});

// Export the action creators generated by the slice.
export const {
  setHasFetchedAllTransactions,
  setAllTransactions,
  setModalVisible,
  setAmount,
  setRecommendedCards,
  setCardSelectionOpen,
  setSelectedCardIndex,
  setErrStr,
  setCleanState,
  setInitialState,
} = transactionSlice.actions;

// Export the reducer function from the slice to be used in the Redux store.
export default transactionSlice.reducer;
